#!/bin/bash

usage()
{
	echo "Usage: setup [options]

[options] is any of the following:
  -h         help           show this info
  -a         apt-get        apt-get all prerequisites
  -p         patch          patch arduino
  -w         wiringPi       install wiringPi
  -d         dfu-programmer install dfu-programmer
  -c         compile        compile + install avrdude from source
  -b         binary         install pre-compiled avrdude binary
  -f         fuses          set m32u4 fuses (with crystal)
  -t         test           make + upload test/blinky.hex
  -v         avrm           install avrm tool
  -r         remove         remove avrdude from system"
}

apt_get_everything()
{
#	sudo apt-get update
#	sudo apt-get upgrade
	sudo apt-get install -y arduino arduino-mk avr-libc binutils-avr gcc-avr avra
#	sudo apt-get install -y gdb-avr simulavr
	sudo apt-get install -y cmake minicom
	sudo apt-get install -y autoconf bison flex
}

compile_from_source()
{
	cd install/

	AVRDUDE_TGZ=avrdude-6.1.tar.gz

	if [ ! -f $AVRDUDE_TGZ ]; then
		echo "avrdude tar.gz not found. Getting it..."
		wget http://download.savannah.gnu.org/releases/avrdude/${AVRDUDE_TGZ} || { echo "Error getting "${AVRDUDE_TGZ}; exit 1; }
	fi

	if [ -f $AVRDUDE_TGZ ]; then
		echo "Found avrdude tar.gz: extracting..."
		tar -xzvf ${AVRDUDE_TGZ} || { echo "Error extracting "${AVRDUDE_TGZ}; exit 1; }
	fi

	cd avrdude-6.1
	./bootstrap
	./configure --enable-linuxgpio=yes --prefix=/usr --sysconfdir=/etc
	make
	sudo make install
	cd ..

	sudo install -b -m 644 avrdude-bin/avrdude.conf '/etc'
	sudo chmod 4755 /usr/bin/avrdude

	cd ..
}

install_bin()
{
	echo 'installing avrdude to usr/bin'
	sudo mkdir -p '/usr/bin'
	sudo install -m 4755 install/avrdude-bin/avrdude '/usr/bin'

	echo 'installing avrdude.conf to /etc'
	sudo mkdir -p '/etc'
	sudo install -b -m 644 install/avrdude-bin/avrdude.conf '/etc'

	echo 'installing avrdude.1.gz to /usr/share/man/man1'
	sudo mkdir -p '/usr/share/man/man1'
	sudo install -m 644 install/avrdude-bin/avrdude.1.gz '/usr/share/man/man1'
}

patch_arduino()
{
	sudo mv /usr/share/arduino/hardware/arduino/programmers.txt /usr/share/arduino/hardware/arduino/programmers.txt.bak
	sudo cp install/arduino/programmers.txt '/usr/share/arduino/hardware/arduino'

	sudo mv /usr/share/arduino/hardware/arduino/boards.txt /usr/share/arduino/hardware/arduino/boards.txt.bak
	sudo cp install/arduino/boards.txt '/usr/share/arduino/hardware/arduino'
}

m328_fuses()
{
	#factory: (E:07, H:D9, L:62)
	avrdude -v -c linuxgpio -p m328p -v -U lfuse:w:0xE7:m -U hfuse:w:0xD9:m -U efuse:w:0x07:m
}

m32u4_fuses()
{
	#from factory:  (E:F3, H:99, L:5E)
	avrdude -v -c linuxgpio -p m32u4 -v -U lfuse:w:0xde:m -U hfuse:w:0xd8:m -U efuse:w:0xcb:m
}

test_blinky()
{
	cd test/
	make flash
#	make clean
	cd ..
}

install_wiringpi()
{
	cd install/

	if [ -d wiringPi ]; then
		echo "wiringPi found. updating..."
		cd wiringPi
		git pull origin
		./build
		cd ..
	else
		echo "First time git clone: installing"
		git clone git://git.drogon.net/wiringPi
		cd wiringPi
		./build
		cd ..
	fi
	
	cd ..
}

install_dfu_programmer()
{
	cd install/

	if [ -d dfu-programmer ]; then
		echo "dfu-programmer found. updating..."
		cd dfu-programmer
		git pull origin
	else
		echo "First time git clone: installing"
		git clone https://github.com/dfu-programmer/dfu-programmer
		cd dfu-programmer
	fi
	
	./bootstrap.sh
	./configure
	make
	sudo make install
	cd .. #dfu-programmer

	cd .. #install
}

install_avrm()
{
	cd install/

	if [ -f /etc/avrm.cfg ]; then
		echo "Old /etc/avrm.cfg found. Backing up..." >&2
		sudo mv /etc/avrm.cfg /etc/avrm.cfg.bak
	else
		echo "No config file found. Installing avrm default config..." >&2
	fi

	echo "Please 'sudo nano /etc/avrm.cfg' and edit for your board." >&2
	sudo cp avrm/avrm.cfg /etc/avrm.cfg
	sudo cp avrm/avrm /usr/local/bin/avrm

	cd ..
}

remove()
{
	# sudo apt-get remove avrdude would be better, but also removes arduino

	echo 'removing avrdude from /usr/bin'
	sudo rm /usr/bin/avrdude

	echo 'removing avrdude.conf from /etc'
	sudo rm /etc/avrdude.conf*

	echo 'removing avrdude.1.gz from /usr/share/man/man1'
	sudo rm /usr/share/man/man1/avrdude.1.gz
}

install_ino()
{
	git clone git://github.com/amperka/ino.git
	cd ino

	# sudo apt-get install python-setuptools python-serial
	wget https://bootstrap.pypa.io/get-pip.py
	sudo python get-pip.py
	sudo pip install -U setuptools
	#sudo pip install -U serial
	sudo pip install -U configobj
	sudo pip install -U jinja2
	sudo pip install -U glob2

	sudo make install
	cd ..
}


while getopts ":hacbpwdtfvr" opt; do
  case $opt in
    h)
      usage
      exit 0
      ;;
    a)
      apt_get_everything
      exit 0
      ;;
    c)
      compile_from_source
      exit 0
      ;;
    b)
      install_bin
      exit 0
      ;;
    p)
      patch_arduino
      exit 0
      ;;
    w)
      install_wiringpi
      exit 0
      ;;
    d)
      install_dfu_programmer
      exit 0
      ;;
    t)
      test_blinky
      exit 0
      ;;
    f)
      m328_fuses
#      m32u4_fuses
      exit 0
      ;;
    v)
      install_avrm
      exit 0
      ;;
    r)
      remove
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      usage
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument."
      usage
      exit 1
      ;;
  esac
done

usage
